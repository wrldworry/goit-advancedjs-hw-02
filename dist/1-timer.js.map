{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Described in documentation\nimport flatpickr from \"flatpickr\";\n// Additional import of styles\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Described in documentation\nimport iziToast from \"izitoast\";\n// Additional import of styles\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Get DOM elements\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\n// Variables for timer functionality\nlet userSelectedDate = null;\nlet timerInterval = null;\n\n// Make start button inactive initially\nstartButton.disabled = true;\n\n// Flatpickr options\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    \n    if (selectedDate && selectedDate <= new Date()) {\n      // Date is in the past\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight'\n      });\n      startButton.disabled = true;\n      userSelectedDate = null;\n    } else if (selectedDate) {\n      // Valid date selected\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\n// Initialize flatpickr\nflatpickr(dateTimePicker, options);\n\n// Convert milliseconds to time object\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Add leading zero for formatting\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// Update timer display\nfunction updateTimerDisplay(time) {\n  daysValue.textContent = addLeadingZero(time.days);\n  hoursValue.textContent = addLeadingZero(time.hours);\n  minutesValue.textContent = addLeadingZero(time.minutes);\n  secondsValue.textContent = addLeadingZero(time.seconds);\n}\n\n// Start timer function\nfunction startTimer() {\n  if (!userSelectedDate) return;\n\n  // Disable controls during countdown\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      // Timer has reached the end\n      clearInterval(timerInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      \n      // Re-enable input for selecting new date\n      dateTimePicker.disabled = false;\n      // Keep start button disabled until new valid date is selected\n      \n      iziToast.success({\n        title: 'Completed',\n        message: 'Timer has finished!',\n        position: 'topRight'\n      });\n      \n      return;\n    }\n\n    // Update timer display\n    const time = convertMs(timeDifference);\n    updateTimerDisplay(time);\n  }, 1000);\n}\n\n// Event listener for start button\nstartButton.addEventListener('click', startTimer); "],"names":["dateTimePicker","startButton","daysValue","hoursValue","minutesValue","secondsValue","userSelectedDate","timerInterval","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","time","startTimer","timeDifference"],"mappings":"sFAWA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAG5D,IAAIC,EAAmB,KACnBC,EAAgB,KAGpBN,EAAY,SAAW,GAGvB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgBA,GAAgB,IAAI,MAEtCC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAY,SAAW,GACvBK,EAAmB,MACVI,IAETJ,EAAmBI,EACnBT,EAAY,SAAW,GAE1B,CACH,EAGAW,EAAUZ,EAAgBQ,CAAO,EAGjC,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAmBC,EAAM,CAChCpB,EAAU,YAAciB,EAAeG,EAAK,IAAI,EAChDnB,EAAW,YAAcgB,EAAeG,EAAK,KAAK,EAClDlB,EAAa,YAAce,EAAeG,EAAK,OAAO,EACtDjB,EAAa,YAAcc,EAAeG,EAAK,OAAO,CACxD,CAGA,SAASC,GAAa,CACfjB,IAGLL,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1BO,EAAgB,YAAY,IAAM,CAEhC,MAAMiB,EAAiBlB,EADH,IAAI,KAGxB,GAAIkB,GAAkB,EAAG,CAEvB,cAAcjB,CAAa,EAC3Bc,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAGhErB,EAAe,SAAW,GAG1BW,EAAS,QAAQ,CACf,MAAO,YACP,QAAS,sBACT,SAAU,UAClB,CAAO,EAED,MACD,CAGD,MAAMW,EAAOT,EAAUW,CAAc,EACrCH,EAAmBC,CAAI,CACxB,EAAE,GAAI,EACT,CAGArB,EAAY,iBAAiB,QAASsB,CAAU"}